buildscript {
    ext {
        springbootVersion = "1.5.1.RELEASE"
        appName           = "mijin-java-sample"
        appVersion        = "1.0.2"

        mijinVersion      = "0.6.82-BETA"
        mijinJarFile      = "libs/nem-core-${mijinVersion}.jar"
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springbootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

jar {
    baseName = appName
    version  = appVersion
}

war {
    baseName = appName
    version  = appVersion
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    all*.exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-log4j2")
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml")
    compile("org.springframework.boot:spring-boot-starter-web")

    compile files(mijinJarFile)
    compile("net.minidev:json-smart:1.2")

    runtime("org.apache.commons:commons-lang3:3.3.2")
    runtime("com.googlecode.javaewah:JavaEWAH:1.0.0")
    runtime("org.bouncycastle:bcprov-jdk15on:1.50")
    runtime("commons-codec:commons-codec:1.9")
    runtime("org.apache.commons:commons-math3:3.2")
    runtime("org.apache.httpcomponents:httpasyncclient:4.1.1")
    runtime("commons-io:commons-io:2.4")
    runtime("commons-cli:commons-cli:1.2")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}
